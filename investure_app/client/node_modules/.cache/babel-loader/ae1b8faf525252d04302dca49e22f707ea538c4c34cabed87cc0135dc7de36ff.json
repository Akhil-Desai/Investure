{"ast":null,"code":"//imports\nimport axios from\"axios\";//Server URL\nconst API_BASE_URL=\"https://investure-production.up.railway.app\";/**\n * Uploads a file to the server using an HTTP POST request.\n *\n * @async\n * @function uploadFile\n * @param {File} file - The file to be uploaded.\n * @returns {Promise<Object>} - Resolves with the server's response data on successful upload.\n * @throws {Error} - Throws an error if the file upload fails.\n */export const uploadFile=async file=>{const formData=new FormData();formData.append(\"file\",file);try{const response=await axios.post(`${API_BASE_URL}/upload`,formData);return response.data.message;}catch(error){console.log(\"error uploading file\",error);throw error;}};/**\n * Retrieves the data from the server using an HTTP GET request\n *\n * @async\n * @function fetchTotalReturns\n * @returns {Array<Object>} - Resolves with the fetched data from the server\n * @throws {error}\n */export const fetchTotalReturns=async()=>{try{const fetchedData=await axios.get(`${API_BASE_URL}/getTotalReturns`);return fetchedData;}catch(error){console.log(\"error fetching data\",error);throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","uploadFile","file","formData","FormData","append","response","post","data","message","error","console","log","fetchTotalReturns","fetchedData","get"],"sources":["/Users/akhil/Desktop/Code/Investure/investure_app/client/src/services/API.tsx"],"sourcesContent":["//imports\nimport axios from \"axios\"\n\n//Server URL\nconst API_BASE_URL = \"https://investure-production.up.railway.app\"\n\n\n/**\n * Uploads a file to the server using an HTTP POST request.\n *\n * @async\n * @function uploadFile\n * @param {File} file - The file to be uploaded.\n * @returns {Promise<Object>} - Resolves with the server's response data on successful upload.\n * @throws {Error} - Throws an error if the file upload fails.\n */\nexport const uploadFile = async(file: any) => {\n    const formData = new FormData()\n    formData.append(\"file\", file)\n\n    try {\n        const response = await axios.post(`${API_BASE_URL}/upload`, formData)\n        return response.data.message\n    } catch (error) {\n        console.log(\"error uploading file\", error)\n        throw error;\n    }\n}\n\n/**\n * Retrieves the data from the server using an HTTP GET request\n *\n * @async\n * @function fetchTotalReturns\n * @returns {Array<Object>} - Resolves with the fetched data from the server\n * @throws {error}\n */\nexport const fetchTotalReturns = async() => {\n    try {\n        const fetchedData = await axios.get(`${API_BASE_URL}/getTotalReturns`)\n        return fetchedData\n    } catch (error) {\n        console.log(\"error fetching data\", error)\n        throw error\n    }\n}\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAG,6CAA6C,CAGlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAM,CAAAC,IAAS,EAAK,CAC1C,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,GAAI,CACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,SAAS,CAAEG,QAAQ,CAAC,CACrE,MAAO,CAAAG,QAAQ,CAACE,IAAI,CAACC,OAAO,CAChC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEF,KAAK,CAAC,CAC1C,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAG,iBAAiB,CAAG,KAAAA,CAAA,GAAW,CACxC,GAAI,CACA,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,kBAAkB,CAAC,CACtE,MAAO,CAAAc,WAAW,CACtB,CAAE,MAAOJ,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEF,KAAK,CAAC,CACzC,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"//imports\nimport React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import zoomPlugin from'chartjs-plugin-zoom';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import'../styles/LineGraphComponent.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,zoomPlugin);/**\n * Renders a line chart for visualizing cumulative returns data over time.\n *\n * @param {Object} props - Component props\n * @param {TotalReturns[]} props.ReturnsData - Array of cumulative returns data\n *\n * @component\n */function ChartComponent(_ref){let{ReturnsData}=_ref;const[chartData,setChartData]=useState({labels:[],datasets:[{label:'',data:[],borderColor:'',backgroundColor:'',fill:false}]});/**\n   * Converts Excel serial date format to a JavaScript Date.\n   * @param {string} excelSerialDate - The Excel serial date string.\n   * @returns {Date} - The converted JavaScript Date object.\n   */const convertExcelDate=excelSerialDate=>{const excelBaseDate=new Date(1900,0,1);const jsDate=new Date(excelBaseDate.getTime()+(parseInt(excelSerialDate)-2)*86400000);return jsDate;};const[averageReturn,setAverageReturn]=useState(null);const[latestReturn,setLatestReturn]=useState(null);const[maxReturn,setMaxReturn]=useState(null);useEffect(()=>{const refDate=ReturnsData.map(item=>{const date=convertExcelDate(item.ReferenceDate);return date.toISOString().split('T')[0];});const cumulativeRets=ReturnsData.map(item=>item.CumulativeReturn*100);//Finds average cumulative returns\nconst avgReturn=cumulativeRets.reduce((acc,val)=>acc+val,0)/cumulativeRets.length;//Finds latest cumulative returns\nconst latest=cumulativeRets[cumulativeRets.length-1];//Finds max cumulative return\nconst max=Math.max(...cumulativeRets);//Fixes cumulative data points to 2 decimal places\nconst cumulativeRetsFixed=ReturnsData.map(item=>(item.CumulativeReturn*100).toFixed(2));setChartData({labels:refDate,datasets:[{label:'Cumulative Return',data:cumulativeRetsFixed,borderColor:'rgba(75, 192, 192, 1)',backgroundColor:'rgba(75, 192, 192, 0.2)',fill:true}]});setAverageReturn(avgReturn);setLatestReturn(latest);setMaxReturn(max);},[ReturnsData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"S&P 500 Total Returns\"}),/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Average Return:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[(averageReturn===null||averageReturn===void 0?void 0:averageReturn.toFixed(2))||\"N/A\",\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Latest Return:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[(latestReturn===null||latestReturn===void 0?void 0:latestReturn.toFixed(2))||\"N/A\",\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Max Return:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[(maxReturn===null||maxReturn===void 0?void 0:maxReturn.toFixed(2))||\"N/A\",\"%\"]})]})]})]});}const chartOptions={responsive:true,plugins:{legend:{position:'top'},tooltip:{callbacks:{label:context=>`${context.dataset.label}: ${context.raw}%`}},zoom:{pan:{enabled:true,mode:'xy',modifierKey:'alt'},zoom:{wheel:{enabled:true},pinch:{enabled:true},mode:'xy'}}},scales:{x:{title:{display:true,text:'Date'}},y:{title:{display:true,text:'Cumulative Return (%)'}}}};export default ChartComponent;","map":{"version":3,"names":["React","useState","useEffect","Line","zoomPlugin","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ChartComponent","_ref","ReturnsData","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","fill","convertExcelDate","excelSerialDate","excelBaseDate","Date","jsDate","getTime","parseInt","averageReturn","setAverageReturn","latestReturn","setLatestReturn","maxReturn","setMaxReturn","refDate","map","item","date","ReferenceDate","toISOString","split","cumulativeRets","CumulativeReturn","avgReturn","reduce","acc","val","length","latest","max","Math","cumulativeRetsFixed","toFixed","className","children","options","chartOptions","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","zoom","pan","enabled","mode","modifierKey","wheel","pinch","scales","x","title","display","text","y"],"sources":["/Users/akhil/Desktop/Code/Investure/investure_app/client/src/components/LineGraphComponent.tsx"],"sourcesContent":["//imports\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport '../styles/LineGraphComponent.css';\n\ninterface TotalReturns {\n  ReferenceDate: string;\n  CumulativeReturn: number;\n}\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, zoomPlugin);\n\ninterface Chart {\n  labels: string[]; // Array of dates for the X-axis\n  datasets: {\n    label: string; // Dataset label displayed in the legend\n    data: string[]; // Array of cumulative data points\n    borderColor: string;\n    backgroundColor: string;\n    fill: boolean;\n  }[];\n}\n\n/**\n * Renders a line chart for visualizing cumulative returns data over time.\n *\n * @param {Object} props - Component props\n * @param {TotalReturns[]} props.ReturnsData - Array of cumulative returns data\n *\n * @component\n */\n\nfunction ChartComponent({ ReturnsData }: { ReturnsData: TotalReturns[] }) {\n  const [chartData, setChartData] = useState<Chart>({\n    labels: [],\n    datasets: [\n      {\n        label: '',\n        data: [],\n        borderColor: '',\n        backgroundColor: '',\n        fill: false,\n      },\n    ],\n});\n\n /**\n   * Converts Excel serial date format to a JavaScript Date.\n   * @param {string} excelSerialDate - The Excel serial date string.\n   * @returns {Date} - The converted JavaScript Date object.\n   */\n  const convertExcelDate = (excelSerialDate: string) => {\n    const excelBaseDate = new Date(1900, 0, 1);\n    const jsDate = new Date(excelBaseDate.getTime() + (parseInt(excelSerialDate) - 2) * 86400000);\n    return jsDate;\n  }\n\n  const [averageReturn, setAverageReturn] = useState<number | null>(null);\n  const [latestReturn, setLatestReturn] = useState<number | null>(null);\n  const [maxReturn, setMaxReturn] = useState<number | null>(null);\n\n  useEffect(() => {\n    const refDate = ReturnsData.map((item) => {\n        const date = convertExcelDate(item.ReferenceDate)\n        return date.toISOString().split('T')[0]\n    });\n\n    const cumulativeRets = ReturnsData.map((item) => (item.CumulativeReturn * 100));\n\n    //Finds average cumulative returns\n    const avgReturn = cumulativeRets.reduce((acc, val) => acc + val, 0) / cumulativeRets.length;\n\n    //Finds latest cumulative returns\n    const latest = cumulativeRets[cumulativeRets.length - 1];\n\n    //Finds max cumulative return\n    const max = Math.max(...cumulativeRets);\n\n    //Fixes cumulative data points to 2 decimal places\n    const cumulativeRetsFixed = ReturnsData.map((item) => (item.CumulativeReturn * 100).toFixed(2));\n\n    setChartData({\n      labels: refDate,\n      datasets: [\n        {\n          label: 'Cumulative Return',\n          data: cumulativeRetsFixed,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          fill: true,\n        },\n      ],\n    });\n\n    setAverageReturn(avgReturn);\n    setLatestReturn(latest);\n    setMaxReturn(max);\n  }, [ReturnsData]);\n\n  return (\n    <div className=\"chart-container\">\n    <h2>S&P 500 Total Returns</h2>\n        <Line data={chartData} options={chartOptions} />\n      <div className=\"stats-container\">\n        <div className=\"stat-item\">\n          <strong>Average Return:</strong>\n          <span>{averageReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n        <div className=\"stat-item\">\n          <strong>Latest Return:</strong>\n          <span>{latestReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n        <div className=\"stat-item\">\n          <strong>Max Return:</strong>\n          <span>{maxReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top' as const,\n    },\n    tooltip: {\n      callbacks: {\n        label: (context: any) => `${context.dataset.label}: ${context.raw}%`,\n      },\n    },\n    zoom: {\n        pan: {\n          enabled: true,\n          mode: 'xy' as const,\n          modifierKey:'alt' as const\n        },\n        zoom: {\n          wheel: {\n            enabled: true,\n          },\n          pinch: {\n            enabled: true,\n          },\n          mode: 'xy' as const,\n        },\n      },\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Date',\n      },\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Cumulative Return (%)',\n      },\n    },\n  },\n};\n\nexport default ChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
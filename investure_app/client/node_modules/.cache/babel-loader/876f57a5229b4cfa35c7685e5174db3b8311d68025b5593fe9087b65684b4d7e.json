{"ast":null,"code":"var _jsxFileName = \"/Users/akhil/Desktop/Code/Investure/investure_app/client/src/components/BarGraphComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../styles/BoxGraphComponent.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction BoxGraphComponent({\n  ReturnsData\n}) {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: '',\n      data: [],\n      borderColor: '',\n      backgroundColor: '',\n      fill: false\n    }]\n  });\n  const [averageYearlyReturn, setAverageYearlyReturn] = useState(null);\n  const [maxYearlyReturn, setMaxYearlyReturn] = useState(null);\n  const [peakYear, setPeakYear] = useState(null);\n  const convertExcelDate = excelSerialDate => {\n    const excelBaseDate = new Date(1900, 0, 1);\n    const jsDate = new Date(excelBaseDate.getTime() + (parseInt(excelSerialDate) - 2) * 86400000);\n    return jsDate;\n  };\n  useEffect(() => {\n    // Grouping returns by year\n    const returnsByYear = {};\n    ReturnsData.forEach(item => {\n      const date = convertExcelDate(item.ReferenceDate);\n      const year = date.getFullYear().toString();\n      if (!returnsByYear[year]) {\n        returnsByYear[year] = [];\n      }\n      returnsByYear[year].push(item.CumulativeReturn);\n    });\n    const years = Object.keys(returnsByYear);\n    const yearlyReturns = years.map(year => {\n      const totalReturn = returnsByYear[year].reduce((acc, val) => acc + val, 0);\n      return (totalReturn * 100).toFixed(2); // Converting to percentage\n    });\n    const avgYearlyReturn = years.reduce((acc, year) => {\n      const totalReturn = returnsByYear[year].reduce((acc, val) => acc + val, 0);\n      return acc + totalReturn;\n    }, 0) / years.length;\n    const maxYearlyReturn = Math.max(...years.map(year => {\n      return returnsByYear[year].reduce((acc, val) => acc + val, 0);\n    }));\n    const peakYear = years[years.findIndex(year => {\n      const totalReturn = returnsByYear[year].reduce((acc, val) => acc + val, 0);\n      return totalReturn === maxYearlyReturn;\n    })];\n    setChartData({\n      labels: years,\n      datasets: [{\n        label: 'Total Return by Year',\n        data: yearlyReturns,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true\n      }]\n    });\n    setAverageYearlyReturn(avgYearlyReturn * 100); // Convert to percentage\n    setMaxYearlyReturn(maxYearlyReturn * 100); // Convert to percentage\n    setPeakYear(peakYear);\n  }, [ReturnsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"S&P 500 Total Returns by Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Average Yearly Return:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [(averageYearlyReturn === null || averageYearlyReturn === void 0 ? void 0 : averageYearlyReturn.toFixed(2)) || \"N/A\", \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Max Yearly Return:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [(maxYearlyReturn === null || maxYearlyReturn === void 0 ? void 0 : maxYearlyReturn.toFixed(2)) || \"N/A\", \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Peak Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: peakYear || \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(BoxGraphComponent, \"miozW1QhWIFYao+HWjGUJF9j/eY=\");\n_c = BoxGraphComponent;\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    tooltip: {\n      callbacks: {\n        label: context => `${context.dataset.label}: ${context.raw}%`\n      }\n    }\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Year'\n      }\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Total Return (%)'\n      }\n    }\n  }\n};\nexport default BoxGraphComponent;\nvar _c;\n$RefreshReg$(_c, \"BoxGraphComponent\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","BoxGraphComponent","ReturnsData","_s","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","fill","averageYearlyReturn","setAverageYearlyReturn","maxYearlyReturn","setMaxYearlyReturn","peakYear","setPeakYear","convertExcelDate","excelSerialDate","excelBaseDate","Date","jsDate","getTime","parseInt","returnsByYear","forEach","item","date","ReferenceDate","year","getFullYear","toString","push","CumulativeReturn","years","Object","keys","yearlyReturns","map","totalReturn","reduce","acc","val","toFixed","avgYearlyReturn","length","Math","max","findIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","chartOptions","_c","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","x","title","display","text","y","$RefreshReg$"],"sources":["/Users/akhil/Desktop/Code/Investure/investure_app/client/src/components/BarGraphComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport '../styles/BoxGraphComponent.css';  // Import the CSS file\n\ninterface TotalReturns {\n  ReferenceDate: string;\n  CumulativeReturn: number;\n}\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\ninterface Chart {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: string[];\n    borderColor: string;\n    backgroundColor: string;\n    fill: boolean;\n  }[];\n}\n\nfunction BoxGraphComponent({ ReturnsData }: { ReturnsData: TotalReturns[] }) {\n  const [chartData, setChartData] = useState<Chart>({\n    labels: [],\n    datasets: [\n      {\n        label: '',\n        data: [],\n        borderColor: '',\n        backgroundColor: '',\n        fill: false,\n      },\n    ],\n  });\n\n  const [averageYearlyReturn, setAverageYearlyReturn] = useState<number | null>(null);\n  const [maxYearlyReturn, setMaxYearlyReturn] = useState<number | null>(null);\n  const [peakYear, setPeakYear] = useState<string | null>(null);\n\n  const convertExcelDate = (excelSerialDate: string) => {\n    const excelBaseDate = new Date(1900, 0, 1);\n    const jsDate = new Date(excelBaseDate.getTime() + (parseInt(excelSerialDate) - 2) * 86400000);\n    return jsDate;\n  };\n\n  useEffect(() => {\n    // Grouping returns by year\n    const returnsByYear: Record<string, number[]> = {};\n    ReturnsData.forEach((item) => {\n      const date = convertExcelDate(item.ReferenceDate);\n      const year = date.getFullYear().toString();\n      if (!returnsByYear[year]) {\n        returnsByYear[year] = [];\n      }\n      returnsByYear[year].push(item.CumulativeReturn);\n    });\n\n    const years = Object.keys(returnsByYear);\n    const yearlyReturns = years.map((year) => {\n      const totalReturn = returnsByYear[year].reduce((acc, val) => acc + val, 0);\n      return (totalReturn * 100).toFixed(2); // Converting to percentage\n    });\n\n    const avgYearlyReturn = years.reduce((acc, year) => {\n      const totalReturn = returnsByYear[year].reduce((acc, val) => acc + val, 0);\n      return acc + totalReturn;\n    }, 0) / years.length;\n\n    const maxYearlyReturn = Math.max(...years.map((year) => {\n      return returnsByYear[year].reduce((acc, val) => acc + val, 0);\n    }));\n\n    const peakYear = years[years.findIndex((year) => {\n      const totalReturn = returnsByYear[year].reduce((acc, val) => acc + val, 0);\n      return totalReturn === maxYearlyReturn;\n    })];\n\n    setChartData({\n      labels: years,\n      datasets: [\n        {\n          label: 'Total Return by Year',\n          data: yearlyReturns,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          fill: true,\n        },\n      ],\n    });\n\n    setAverageYearlyReturn(avgYearlyReturn * 100); // Convert to percentage\n    setMaxYearlyReturn(maxYearlyReturn * 100); // Convert to percentage\n    setPeakYear(peakYear);\n  }, [ReturnsData]);\n\n  return (\n    <div className=\"chart-container\">\n      <h2>S&P 500 Total Returns by Year</h2>\n      <Bar data={chartData} options={chartOptions} />\n      <div className=\"stats-container\">\n        <div className=\"stat-item\">\n          <strong>Average Yearly Return:</strong>\n          <span>{averageYearlyReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n        <div className=\"stat-item\">\n          <strong>Max Yearly Return:</strong>\n          <span>{maxYearlyReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n        <div className=\"stat-item\">\n          <strong>Peak Year:</strong>\n          <span>{peakYear || \"N/A\"}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top' as const,\n    },\n    tooltip: {\n      callbacks: {\n        label: (context: any) => `${context.dataset.label}: ${context.raw}%`,\n      },\n    },\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Year',\n      },\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Total Return (%)',\n      },\n    },\n  },\n};\n\nexport default BoxGraphComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
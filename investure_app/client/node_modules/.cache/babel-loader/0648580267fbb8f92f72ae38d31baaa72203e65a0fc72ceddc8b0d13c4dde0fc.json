{"ast":null,"code":"var _jsxFileName = \"/Users/akhil/Desktop/Code/Investure/investure_app/client/src/components/LineGraphComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../styles/LineGraphComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, zoomPlugin);\n/**\n * Renders a line chart for visualizing cumulative returns data over time.\n *\n * @param {Object} props - Component props\n * @param {TotalReturns[]} props.ReturnsData - Array of cumulative returns data\n *\n * @component\n * @example\n * const data = [{ ReferenceDate: '44197', CumulativeReturn: 0.08 }];\n * return <ChartComponent ReturnsData={data} />;\n */\n\nfunction ChartComponent({\n  ReturnsData\n}) {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: '',\n      data: [],\n      borderColor: '',\n      backgroundColor: '',\n      fill: false\n    }]\n  });\n\n  /**\n    * Converts Excel serial date format to a JavaScript Date.\n    * @param {string} excelSerialDate - The Excel serial date string.\n    * @returns {Date} - The converted JavaScript Date object.\n    */\n  const convertExcelDate = excelSerialDate => {\n    const excelBaseDate = new Date(1900, 0, 1);\n    const jsDate = new Date(excelBaseDate.getTime() + (parseInt(excelSerialDate) - 2) * 86400000);\n    return jsDate;\n  };\n  const [averageReturn, setAverageReturn] = useState(null);\n  const [latestReturn, setLatestReturn] = useState(null);\n  const [maxReturn, setMaxReturn] = useState(null);\n  useEffect(() => {\n    const refDate = ReturnsData.map(item => {\n      const date = convertExcelDate(item.ReferenceDate);\n      return date.toISOString().split('T')[0];\n    });\n    const cumulativeRets = ReturnsData.map(item => item.CumulativeReturn * 100);\n    const avgReturn = cumulativeRets.reduce((acc, val) => acc + val, 0) / cumulativeRets.length;\n    const latest = cumulativeRets[cumulativeRets.length - 1];\n    const max = Math.max(...cumulativeRets);\n    const cumulativeRetsFixed = ReturnsData.map(item => (item.CumulativeReturn * 100).toFixed(2));\n    setChartData({\n      labels: refDate,\n      datasets: [{\n        label: 'Cumulative Return',\n        data: cumulativeRetsFixed,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true\n      }]\n    });\n    setAverageReturn(avgReturn);\n    setLatestReturn(latest);\n    setMaxReturn(max);\n  }, [ReturnsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"S&P 500 Total Returns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Average Return:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [(averageReturn === null || averageReturn === void 0 ? void 0 : averageReturn.toFixed(2)) || \"N/A\", \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Latest Return:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [(latestReturn === null || latestReturn === void 0 ? void 0 : latestReturn.toFixed(2)) || \"N/A\", \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Max Return:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [(maxReturn === null || maxReturn === void 0 ? void 0 : maxReturn.toFixed(2)) || \"N/A\", \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartComponent, \"3OD9UIab3Ch5vI2di48wiUqJlIA=\");\n_c = ChartComponent;\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    tooltip: {\n      callbacks: {\n        label: context => `${context.dataset.label}: ${context.raw}%`\n      }\n    },\n    zoom: {\n      pan: {\n        enabled: true,\n        mode: 'xy',\n        modifierKey: 'alt'\n      },\n      zoom: {\n        wheel: {\n          enabled: true\n        },\n        pinch: {\n          enabled: true\n        },\n        mode: 'xy'\n      }\n    }\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Date'\n      }\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Cumulative Return (%)'\n      }\n    }\n  }\n};\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useState","useEffect","Line","zoomPlugin","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ChartComponent","ReturnsData","_s","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","fill","convertExcelDate","excelSerialDate","excelBaseDate","Date","jsDate","getTime","parseInt","averageReturn","setAverageReturn","latestReturn","setLatestReturn","maxReturn","setMaxReturn","refDate","map","item","date","ReferenceDate","toISOString","split","cumulativeRets","CumulativeReturn","avgReturn","reduce","acc","val","length","latest","max","Math","cumulativeRetsFixed","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","chartOptions","_c","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","zoom","pan","enabled","mode","modifierKey","wheel","pinch","scales","x","title","display","text","y","$RefreshReg$"],"sources":["/Users/akhil/Desktop/Code/Investure/investure_app/client/src/components/LineGraphComponent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport '../styles/LineGraphComponent.css';\n\ninterface TotalReturns {\n  ReferenceDate: string;\n  CumulativeReturn: number;\n}\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, zoomPlugin);\n\ninterface Chart {\n  labels: string[]; // Array of dates for the X-axis\n  datasets: {\n    label: string; // Dataset label displayed in the legend\n    data: string[]; // Array of cumulative data points\n    borderColor: string;\n    backgroundColor: string;\n    fill: boolean;\n  }[];\n}\n\n/**\n * Renders a line chart for visualizing cumulative returns data over time.\n *\n * @param {Object} props - Component props\n * @param {TotalReturns[]} props.ReturnsData - Array of cumulative returns data\n *\n * @component\n * @example\n * const data = [{ ReferenceDate: '44197', CumulativeReturn: 0.08 }];\n * return <ChartComponent ReturnsData={data} />;\n */\n\nfunction ChartComponent({ ReturnsData }: { ReturnsData: TotalReturns[] }) {\n  const [chartData, setChartData] = useState<Chart>({\n    labels: [],\n    datasets: [\n      {\n        label: '',\n        data: [],\n        borderColor: '',\n        backgroundColor: '',\n        fill: false,\n      },\n    ],\n});\n\n /**\n   * Converts Excel serial date format to a JavaScript Date.\n   * @param {string} excelSerialDate - The Excel serial date string.\n   * @returns {Date} - The converted JavaScript Date object.\n   */\n  const convertExcelDate = (excelSerialDate: string) => {\n    const excelBaseDate = new Date(1900, 0, 1);\n    const jsDate = new Date(excelBaseDate.getTime() + (parseInt(excelSerialDate) - 2) * 86400000);\n    return jsDate;\n  }\n\n  const [averageReturn, setAverageReturn] = useState<number | null>(null);\n  const [latestReturn, setLatestReturn] = useState<number | null>(null);\n  const [maxReturn, setMaxReturn] = useState<number | null>(null);\n\n  useEffect(() => {\n    const refDate = ReturnsData.map((item) => {\n        const date = convertExcelDate(item.ReferenceDate)\n        return date.toISOString().split('T')[0]\n    });\n    const cumulativeRets = ReturnsData.map((item) => (item.CumulativeReturn * 100));\n\n    const avgReturn = cumulativeRets.reduce((acc, val) => acc + val, 0) / cumulativeRets.length;\n    const latest = cumulativeRets[cumulativeRets.length - 1];\n    const max = Math.max(...cumulativeRets);\n\n    const cumulativeRetsFixed = ReturnsData.map((item) => (item.CumulativeReturn * 100).toFixed(2));\n\n    setChartData({\n      labels: refDate,\n      datasets: [\n        {\n          label: 'Cumulative Return',\n          data: cumulativeRetsFixed,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          fill: true,\n        },\n      ],\n    });\n\n    setAverageReturn(avgReturn);\n    setLatestReturn(latest);\n    setMaxReturn(max);\n  }, [ReturnsData]);\n\n  return (\n    <div className=\"chart-container\">\n    <h2>S&P 500 Total Returns</h2>\n        <Line data={chartData} options={chartOptions} />\n      <div className=\"stats-container\">\n        <div className=\"stat-item\">\n          <strong>Average Return:</strong>\n          <span>{averageReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n        <div className=\"stat-item\">\n          <strong>Latest Return:</strong>\n          <span>{latestReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n        <div className=\"stat-item\">\n          <strong>Max Return:</strong>\n          <span>{maxReturn?.toFixed(2) || \"N/A\"}%</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top' as const,\n    },\n    tooltip: {\n      callbacks: {\n        label: (context: any) => `${context.dataset.label}: ${context.raw}%`,\n      },\n    },\n    zoom: {\n        pan: {\n          enabled: true,\n          mode: 'xy' as const,\n          modifierKey:'alt' as const\n        },\n        zoom: {\n          wheel: {\n            enabled: true,\n          },\n          pinch: {\n            enabled: true,\n          },\n          mode: 'xy' as const,\n        },\n      },\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Date',\n      },\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Cumulative Return (%)',\n      },\n    },\n  },\n};\n\nexport default ChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}